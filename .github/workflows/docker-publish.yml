name: Build and Push Docker Image

on:
  push:
    branches:
      - main
permissions:
  contents: write
  id-token: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # wichtig, damit alle Tags verfügbar sind

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Get next patch version
      id: version
      run: |
        # Hole letzte Version mit v0.1.x
        LAST_TAG=$(git tag --list 'v0.1.*' --sort=-v:refname | head -n 1)
        echo "Letzter Tag: $LAST_TAG"

        if [ -z "$LAST_TAG" ]; then
          NEXT_TAG="v0.1.0"
        else
          PATCH=$(echo $LAST_TAG | cut -d. -f3)
          NEXT_PATCH=$((PATCH + 1))
          NEXT_TAG="v0.1.$NEXT_PATCH"
        fi

        echo "next_tag=$NEXT_TAG" >> $GITHUB_OUTPUT

    - name: Build Docker image with version label
      run: |
        docker build -t dockerha08/beartainer:latest -t dockerha08/beartainer:${{ steps.version.outputs.next_tag }} --build-arg BUILD_VERSION=${{ steps.version.outputs.next_tag }} .
    
    - name: Push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          dockerha08/beartainer:latest
          dockerha08/beartainer:${{ steps.version.outputs.next_tag }}

    - name: Create Git Tag and Release
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git tag ${{ steps.version.outputs.next_tag }}
        git push origin ${{ steps.version.outputs.next_tag }}

        # Release erstellen
        gh release create ${{ steps.version.outputs.next_tag }} \
          --title "Release ${{ steps.version.outputs.next_tag }}" \
          --notes "Automatisches Release für Version ${{ steps.version.outputs.next_tag }}" \
          --target ${{ github.sha }}
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
